@page "/"
@inject ILocalStorageService _localstorage;

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/index">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Start Page
            </NavLink>
        </div>

        @if (!string.IsNullOrEmpty(currentUser))
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="search">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Main Page
                </NavLink>
            </div>
            @if(_isAdmin){

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="admin">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Admin
                </NavLink>
            </div>
            } 

            <div class="nav-item px-3">
                <NavLink class="nav-link" href="weeklysearchgraph">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Top Weekly Searches
                </NavLink>
            </div>
        }
        @if (string.IsNullOrEmpty(currentUser))
       { <div class="nav-item px-3">
            <NavLink class="nav-link" href="login">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Login
            </NavLink>
        </div>
       }
    </nav>
</div>

@code {
    private string currentUser = "";
    private bool _isAdmin;
    protected override async Task OnInitializedAsync()
    {
        await UpdateCurrentUserInfo();
    }

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await UpdateCurrentUserInfo();
        }
        base.OnAfterRender(firstRender);
    }

    private async Task UpdateCurrentUserInfo()
    {
        currentUser = await _localstorage.GetItemAsync<string>("username");
        _isAdmin = await _localstorage.GetItemAsync<bool>("isAdmin");
        StateHasChanged();
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private async Task isAdmin(){
        
        _isAdmin= await _localstorage.GetItemAsync<bool>("isAdmin");
       
    }
}
